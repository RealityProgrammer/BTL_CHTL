<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btn_add.Values.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAEAAAABACAYAAACqaXHeAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAL
        DgAACw4BQL7hQQAACtdJREFUeF7tWmlwVFUaTcoZtVxwVMb5MY6jENIhK6SzJ9KE7AkJIaETyC6EJCyK
        UIOiOII4QGRHYihwAQchJGwhQFgiUGOICDjojyl1EEdLhEEkQUuWgUCdOd/t25MeSoXu10m0Kqfq1L3n
        3O/e+73X9713+3V79KAHPehBD3rQuXi4AqY+5Sh/pALLHxmHveTxPuPQxvKKUNePSxvr1Sp2Arx1918m
        vMch0KsCC/tV4AQJl1iOL73KsUDG0sP+3AFPnzKk+ZSjhYSdpnKcNpWhhuUkUwWSfErhHTAO9/pacatQ
        6uKptjI8ybj10sdxDPoH+pcjVebQk/28EFAKs99YHCKh2epXimW+YxCmQ5wEPPuXIZzjVKmxOsY9yJMR
        rIO6H38sxu1BY7AksBRXg0oBliepJwcW4E4d4uE7HncFjEUK2+eybRvLT1i2BY7BFaHUyY/pN0gMvWTp
        o7t7yFgcdwr9U3qOq6wv9noct+mQ7sHAMfAijwaPAQaOxhXW53UcODypk8k68pLEOEPVZzTWyxj2ZS8n
        hXq+zKVj/m4uQ181XVcjdDQiQ0rQGvoYEPIYjoWMxkDd5EE/i/xQ2hRLcI0xB1mfLW2hRfCLycO9TP7X
        QqmLxzGyGTOH8e9JH3t/9v0grBiZengPcwmC2f6pbjtrfgzhuqlrEFaExIgSnCcRUYz6sHz0Ej+qCH2p
        9yjf1nYivBjTIorwe9XRCYSV4kGO8Ux4Cb6yj8f6Th5wH9XOOTl2g247z7YE1bGzwYMJiyrG+ehigOVq
        iwW/Ej+yGCPpfSc+eZZtFXKHV50MIJnXeUwhxkcXoVWP/R3rOdJmteIWzrNC+UW4EFmCKNWps2ApgNeg
        QrQOKgJYvmq/NqlnKc/GmrhC3K86uBGWUej9aCFq7fOwPtPWAk/q15RXhG9i9ApxOyy828fm42hsAcCy
        Xs6++IPzsUx5BWgfUogKFdyJGFyACTKXzMn6y+LJKmQeDTq3I7JqVLA7EZeHJfH5QFw+jiXra576RfHI
        i2wfqgK7AAmjkC5z6nzUSoi34h7q49pboALdhcQ8mMmrSaNwJXmk7W6fNBI5SXmA+Dwhw1VgF4LzDuX8
        7TqHPO2ZtdeekIcBKtA44JmSi0OpI4GUkZgnTnIu+qbm4jvtdfqy/zEwr4mSA/ltuhWPaG+R9g6oIKPI
        GIm09FxgaA5OJuhNTnoOdisvFzUqqBvBXDZILiwbRWdk4G7qf4uXloMkFWQEmVa0ZOYAGVZMVjoXWaKH
        5eBsZqb77/bOgjfj3zLHNsmJuQ0Tj3qq0la8o4JcxfDhCMoeAWRlo7VAffrwpP5QvOxsY0v/yXfRMvld
        QPhkC5q17RKyrJio8hyBo5IjT8pdzLlNPB6Dvw5zHjnZWJibDbBcJpr1FK1PcBJDm5ynWwBHatslJCfj
        NuZ0UnIjE8Wjrtb6JRXkCkZl4UReFpA/HKGiWa8TTX+aCjCAPzcDjtS2yxg1HM9KbqS6LzHnCJXrcHyh
        ApxFfgZMhZlA4TB8bV9WBcNwifpqUZrze/vrMesdwJHadhmFQ/EQ87vG/C6WDcUdkjPzPy3HUJAOLx12
        8yjOQEXJMIBUZ7QoEylaH1QBBlH5N8CR2jaEkgwckhyZq7oMqGtFF2eiTAU4g9EZqB6TAbCcJJr1StHk
        bBVgEIv2A47UtiHYc2TOc7SerHQ6qlSAM+Ay2keiNM32LC1Lwzat3bLrq9oHOFLbhlCehhGS49g01Gud
        KppsUgHOYFwaPidRlmx741KRhn+KHp8OPxVgECv3Ao7UtiFMSEGA5DguFR+L5gnop3QaPlMBzmBCKlon
        pvI5nYj7fkjfCKv3oGV1E+AOrmq6uX0CP+nekuPEFHzzQ9opPJGEy5OSgRn6eX+9vhHW7gHcST3sT+Jx
        7gckx0lJ+M8PaafAT/rylKSOA75e3wgbdgPupB72JyEHLDlOSew4AY7aKUxNQOvUxI4lf72+Eep3onnr
        TsAtbLy5Pf0UC3pLjqRa8tdrp/B0HP41LR6YlmjbRLD+ieinYt1zE9zZCDhS24bwdDwCVM5x+Ej01Hj0
        Uzoex1WAM5geh33PxXGbGm97DE4fgm2in4tHlgowiL07AEdq2xCYo1XlOMT2GHwuFqlaO/8YnDEE1SSe
        H2LbCLGcK5pUmwyjaN4GOFLbhjAjFpUq51jbZo3lZJVzrAsboRcHo3zWYO7TLVivtAXJWr+nAgzivQbA
        kdo2hBcG44jk+MIg228ErNeJnmnBWBXgDGbFwjTbApBfg18sZlhw1+xBuER9rdKCB3WYyzi6FXCktl1G
        ZTQektzICzPMuENy/osFZ+QYXox18eezykH4ksScGNtPT6yvF135KJ5RAQbwjy2AI7XtMpjXdJ3bOtFz
        BiFS9NxHXfw6LJgXgwXzYwCW6oUIy2Stv1rKZ6wKchHHNgOO1LZL4Oq8fV40TkluC6Jty585Lte5Vqog
        V7AkBoGLovltLRqt8xNwpyyrhdH4QLyFMRivw1zC5xvR/MVGQMi6oXd3CyPxhMozCu9Lji9F4W7W28Rb
        EmnglZhgSRQOLI0CyCmiF0ciUzT9swu40VBB3YjqSDzAg2xTOUXafpxhbk9pbeylqKAqHKlVEcCyCJyq
        4o1Qe7uUF45aFdSNYF6bdH7bRS8NQy/q0+K9EmZ7MWIIsqSWh+MgiepwzBevOgR9WP9WeWGYoAK7AZx/
        kuRAniMf1t5i8ZiXoTfN/4cVEQheEYqrK8NwRerKC4OVGuK/GuKe3aEz4JzpK0PRLjmQo8RbEYJQ5ZHL
        wxCkAt2F18xY/HoIQH66hstMvNfNmCke2y5KQiqwC/CGGcM45yWdz/PirQrCb+h9pjyzbaW6FUu9cNtq
        M94nQTbs13+MWB2Ml8VbFYx2lhNVcCeC803iXFd1HkvFk1xY3668YByu8zX2m8WPosaMvm8NxNm3goE1
        wXhN7g/irxmImeJpbvhrIB5QHdyIdeH4HefcZJ+HdfXJSw7Ub2jvDOdWP5J2GtYPQOi6Afi+ZgCwLghv
        2lcCfSv1t+KTbTVBmNjIVaM6GcAqbnI43xMc85we+9zagciWtjorbqFeKT7nvkA/UnXqbNQNQEJdEM6T
        IBvqzLhH+Tz7tUFo1D6oT9YG4NkaP/xBdXQCHPMhjjG9NhCnHMbbzhOr7vYyp2jd9j0/gHjVsauwIRDh
        GwPwzaZAYGMgjm/wR4hu8tgUgAzyqLRpXmPsIXpzyRFbAhDA6/Q+uVY172P/QGnjWJWMPSx97P3pvb85
        sOMfKJu4Cul/ptoDcGZzkKv/RjUIJtpnix+O1PsDLNu3+GNRvQl3S5tcm5v9kMi2dfV+uCgxzpDjXWC/
        tVv9O/7+xkuqF9sWy1wqxh+Ht3b2NX8jyHXe4IcFDb5o3+YHbPPFaeo/8VP9319dG/j1lF4iY2Yzpp7l
        R9StrF8WSl083TZbDlr66O4eMhZjpnLsr2UONZcv5svq0SHdj+2+GNDYHwcafQHF/mjb4YtXGn0QYX9a
        OAPps9MHkRyjWsayj7ujP5p3+bl5k+NO7DEhabcJ7+z2ARx4hqwlJ+/2RspOE0xNPrhfX/+3Sl08aWPM
        lF0+qNN9OsawjWl8b99VYLL+b3tjXpM3vnjbBLhC6dtkwksylh72l4n9feG1vx/Gkq/s80YT+SnrreRl
        zdZ9/XBM2iRmvzdKpY/u3oMe9KAHPehBp8DD4792xzVWXQ/QiAAAAABJRU5ErkJggg==
</value>
  </data>
</root>